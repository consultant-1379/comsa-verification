<?xml version="1.0" encoding="utf-8"?>
<testcase>
	<info>
		<id>SDP763 FT - Register class case: Set different type of attributes under an object that is registered to MAFOI with permission No</id>
		<tag>TC-FT763-043</tag>
		<version>P1A01</version>
		<testcase>functionTestSdp763</testcase>
		<class>FTSdp763</class>
		<method>FTSdp763</method>
		<description>SDP763 FT - Register class case: Set different type of attributes under an object that is registered to MAFOI with permission No</description>
		<!-- Modified TC-FT763-010 with case 1 of key attribute -->
	</info>
	<config>
		<reqComSaVersion>R2A04</reqComSaVersion>
		<reqComVersion>R2A12</reqComVersion>
		<reqCmwVersion>R3A09</reqCmwVersion>
		<reqComSaRelease>3</reqComSaRelease>
		<reqComRelease>2</reqComRelease>
		<reqCmwRelease>1</reqCmwRelease>
		<modelfile_mp>SDP763_mp17_C1.xml</modelfile_mp>
		<modelfile_imm_classes>SDP763_imm_classes17_C1.xml</modelfile_imm_classes>
		<modelfile_imm_objects>SDP763_imm_objects_C1.xml</modelfile_imm_objects>

		<pathToConfigFiles>/test_env/testcases/comsa/configFiles/</pathToConfigFiles>
		<cli_tester_script>cli_tester</cli_tester_script>

		<setup_RETURN_VALUES>#define returnValueConfig returnValues.createMo = ComFailure; returnValues.deleteMo = ComFailure; returnValues.getMo = ComFailure; returnValues.action = ComFailure;</setup_RETURN_VALUES>
		<setup_MAF_RETURN_VALUES>#define maf_returnValueConfig returnValues.createMo = MafFailure; returnValues.deleteMo = MafFailure; returnValues.getMo = MafFailure;; returnValues.action = MafFailure;</setup_MAF_RETURN_VALUES>
		<setup_REG1>#define REG1 \"/ManagedElement/ObjImpTestClass\"</setup_REG1>
		<setup_REG1_PERMISSION>#define REG1_PERMISSION \"NO\"</setup_REG1_PERMISSION>

		<expected_init_log_1>com: MAFOiComponent: mafLCMinit(): Component started</expected_init_log_1>
		<expected_init_log_2>com: MAFOiComponent: loadMocOrDnConfig(): registerAsOIToOamSA: MOC: /ManagedElement/ObjImpTestClass Permission: NO</expected_init_log_2>
		<expected_init_log_3>com: MAFOiComponent: maf_start(): returning MafOk</expected_init_log_3>

		<cli_input_1>"configure" "ManagedElement=1" "ObjImpTestClass=1" "testWritableInt8=88" "testWritableInt16=160" "testWritableInt32=320" "testWritableInt64=640" "testWritableUint8=108" "testWritableUint16=116" "testWritableUint32=132" "testWritableUint64=164" "testWritableString=\"Writable String PASSED\"" "testWritableBool=true" "testWritableEnum=UNLOCKED" "commit" "exit"</cli_input_1>
		<cli_expected_output_1>['configure', 'ailed']</cli_expected_output_1>
		<cli_nonexpected_output_1>['COM Closed connection']</cli_nonexpected_output_1>

		<expected_test_log_1>com: MAFOiComponent: TR::join() entered</expected_test_log_1>
		<expected_test_log_2>com: MAFOiComponent: TR::registerParticipant()</expected_test_log_2>
		<expected_test_log_3>com: MAFOiComponent: MO::maf_setMoAttribute(): dn ManagedElement=1,ObjImpTestClass=1 attributeName testWritable</expected_test_log_3>
		<expected_test_log_4>@ComNbi@Error: Permission denied by MAFOiComponent</expected_test_log_4>
		<expected_test_log_5>com: MAFOiComponent: TR::abort()</expected_test_log_5>
		<expected_test_log_6>com: MAFOiComponent: TR::finish()</expected_test_log_6>

		<teardown_REG1>#define REG1 \"/ManagedElement/ObjImpTestClass\"</teardown_REG1>
		<teardown_REG1_PERMISSION>#define REG1_PERMISSION \"YES\"</teardown_REG1_PERMISSION>
	</config>
</testcase>
